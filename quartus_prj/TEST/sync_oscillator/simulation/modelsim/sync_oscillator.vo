// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 18.0.0 Build 614 04/24/2018 SJ Standard Edition"

// DATE "07/06/2021 15:52:18"

// 
// Device: Altera EPM240T100C5 Package TQFP100
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module sync_oscillator (
	Clk50M,
	Rst_n,
	led);
input 	Clk50M;
input 	Rst_n;
output 	led;

// Design Ports Information


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("sync_oscillator_v.sdo");
// synopsys translate_on

wire \Clk50M~combout ;
wire \Rst_n~combout ;
wire \Equal0~0_combout ;
wire \led~reg0_regout ;
wire [3:0] cnt;


// Location: PIN_14,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \Clk50M~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\Clk50M~combout ),
	.padio(Clk50M));
// synopsys translate_off
defparam \Clk50M~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_12,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \Rst_n~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\Rst_n~combout ),
	.padio(Rst_n));
// synopsys translate_off
defparam \Rst_n~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X5_Y1_N8
maxii_lcell \cnt[0] (
// Equation(s):
// cnt[0] = DFFEAS((((!cnt[0]))), GLOBAL(\Clk50M~combout ), GLOBAL(\Rst_n~combout ), , , , , , )

	.clk(\Clk50M~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(vcc),
	.datad(cnt[0]),
	.aclr(!\Rst_n~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(cnt[0]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \cnt[0] .lut_mask = "00ff";
defparam \cnt[0] .operation_mode = "normal";
defparam \cnt[0] .output_mode = "reg_only";
defparam \cnt[0] .register_cascade_mode = "off";
defparam \cnt[0] .sum_lutc_input = "datac";
defparam \cnt[0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y1_N0
maxii_lcell \cnt[1] (
// Equation(s):
// cnt[1] = DFFEAS(((cnt[1] $ (cnt[0]))), GLOBAL(\Clk50M~combout ), GLOBAL(\Rst_n~combout ), , , , , , )

	.clk(\Clk50M~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(cnt[1]),
	.datad(cnt[0]),
	.aclr(!\Rst_n~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(cnt[1]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \cnt[1] .lut_mask = "0ff0";
defparam \cnt[1] .operation_mode = "normal";
defparam \cnt[1] .output_mode = "reg_only";
defparam \cnt[1] .register_cascade_mode = "off";
defparam \cnt[1] .sum_lutc_input = "datac";
defparam \cnt[1] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y1_N4
maxii_lcell \cnt[2] (
// Equation(s):
// cnt[2] = DFFEAS((cnt[2] $ (((cnt[1] & cnt[0])))), GLOBAL(\Clk50M~combout ), GLOBAL(\Rst_n~combout ), , , , , , )

	.clk(\Clk50M~combout ),
	.dataa(vcc),
	.datab(cnt[1]),
	.datac(cnt[2]),
	.datad(cnt[0]),
	.aclr(!\Rst_n~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(cnt[2]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \cnt[2] .lut_mask = "3cf0";
defparam \cnt[2] .operation_mode = "normal";
defparam \cnt[2] .output_mode = "reg_only";
defparam \cnt[2] .register_cascade_mode = "off";
defparam \cnt[2] .sum_lutc_input = "datac";
defparam \cnt[2] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y1_N5
maxii_lcell \cnt[3] (
// Equation(s):
// cnt[3] = DFFEAS(cnt[3] $ (((cnt[1] & (cnt[2] & cnt[0])))), GLOBAL(\Clk50M~combout ), GLOBAL(\Rst_n~combout ), , , , , , )

	.clk(\Clk50M~combout ),
	.dataa(cnt[3]),
	.datab(cnt[1]),
	.datac(cnt[2]),
	.datad(cnt[0]),
	.aclr(!\Rst_n~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(cnt[3]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \cnt[3] .lut_mask = "6aaa";
defparam \cnt[3] .operation_mode = "normal";
defparam \cnt[3] .output_mode = "reg_only";
defparam \cnt[3] .register_cascade_mode = "off";
defparam \cnt[3] .sum_lutc_input = "datac";
defparam \cnt[3] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y1_N6
maxii_lcell \Equal0~0 (
// Equation(s):
// \Equal0~0_combout  = (((cnt[1] & cnt[0])))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(cnt[1]),
	.datad(cnt[0]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\Equal0~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \Equal0~0 .lut_mask = "f000";
defparam \Equal0~0 .operation_mode = "normal";
defparam \Equal0~0 .output_mode = "comb_only";
defparam \Equal0~0 .register_cascade_mode = "off";
defparam \Equal0~0 .sum_lutc_input = "datac";
defparam \Equal0~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y1_N7
maxii_lcell \led~reg0 (
// Equation(s):
// \led~reg0_regout  = DFFEAS(\led~reg0_regout  $ (((cnt[2] & (cnt[3] & \Equal0~0_combout )))), GLOBAL(\Clk50M~combout ), GLOBAL(\Rst_n~combout ), , , , , , )

	.clk(\Clk50M~combout ),
	.dataa(cnt[2]),
	.datab(\led~reg0_regout ),
	.datac(cnt[3]),
	.datad(\Equal0~0_combout ),
	.aclr(!\Rst_n~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\led~reg0_regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \led~reg0 .lut_mask = "6ccc";
defparam \led~reg0 .operation_mode = "normal";
defparam \led~reg0 .output_mode = "reg_only";
defparam \led~reg0 .register_cascade_mode = "off";
defparam \led~reg0 .sum_lutc_input = "datac";
defparam \led~reg0 .synch_mode = "off";
// synopsys translate_on

// Location: PIN_39,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \led~I (
	.datain(\led~reg0_regout ),
	.oe(vcc),
	.combout(),
	.padio(led));
// synopsys translate_off
defparam \led~I .operation_mode = "output";
// synopsys translate_on

endmodule
