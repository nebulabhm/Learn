module UART_Tx_top(
	Clk, 
	Rst_n, 
	Data_Byte, 
	Baud_set, 
	key_in, 

	Rs232_Tx, 
	Tx_Done, 
	UART_state,
	led
	);
	
	input Clk;
	input Rst_n;
	input [7:0] Data_Byte;
	input [2:0] Baud_set;
	input key_in;
	
	output Rs232_Tx; 
	output Tx_Done;
	output UART_state;
	output led;
	
	reg Rs_232_TX;
	reg Tx_Done;
	reg UART_state;
	reg key_flag0;
	reg key_state0;
	
	wire Send_En;
	wire led;

	key_stable key_stable0(
		.Clk(Clk), 
		.Rst_n(Rst_n), 
		.key_in(ken_in),
		
		.key_flag(key_flag0), 
		.key_state(key_state0)
	);
	
	assign Send_En = key_flag0 & !key_state0;
	UART_Byte_Tx UART_Byte_Tx0(
		.Clk(Clk), 
		.Rst_n(Rst_n), 
		.Data_Byte(Data_Byte), 
		.Send_En(Send_En), 
		.Baud_set(3'd0),
		
		.Rs232_Tx(Rs232_Tx), 
		.Tx_Done(), 
		.UART_state(led)
	);

endmodule
