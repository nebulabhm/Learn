// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 18.0.0 Build 614 04/24/2018 SJ Standard Edition"

// DATE "07/06/2021 15:42:09"

// 
// Device: Altera EP4CE10F17C8 Package FBGA256
// 

// 
// This Verilog file should be used for ModelSim-Altera (Verilog) only
// 

`timescale 1 ps/ 1 ps

module counter (
	Clk50M,
	Rst_n,
	led);
input 	Clk50M;
input 	Rst_n;
output 	led;

// Design Ports Information
// led	=>  Location: PIN_A2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Clk50M	=>  Location: PIN_E1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// Rst_n	=>  Location: PIN_M2,	 I/O Standard: 2.5 V,	 Current Strength: Default


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
// synopsys translate_off
initial $sdf_annotate("counter_8_1200mv_85c_v_slow.sdo");
// synopsys translate_on

wire \led~output_o ;
wire \Clk50M~input_o ;
wire \Clk50M~inputclkctrl_outclk ;
wire \cnt[0]~3_combout ;
wire \Rst_n~input_o ;
wire \Rst_n~inputclkctrl_outclk ;
wire \cnt[1]~2_combout ;
wire \cnt[2]~1_combout ;
wire \cnt[3]~0_combout ;
wire \Equal0~0_combout ;
wire \led~0_combout ;
wire \led~reg0_q ;
wire [3:0] cnt;


hard_block auto_generated_inst(
	.devpor(devpor),
	.devclrn(devclrn),
	.devoe(devoe));

// Location: IOOBUF_X5_Y24_N2
cycloneive_io_obuf \led~output (
	.i(\led~reg0_q ),
	.oe(vcc),
	.seriesterminationcontrol(16'b0000000000000000),
	.devoe(devoe),
	.o(\led~output_o ),
	.obar());
// synopsys translate_off
defparam \led~output .bus_hold = "false";
defparam \led~output .open_drain_output = "false";
// synopsys translate_on

// Location: IOIBUF_X0_Y11_N8
cycloneive_io_ibuf \Clk50M~input (
	.i(Clk50M),
	.ibar(gnd),
	.o(\Clk50M~input_o ));
// synopsys translate_off
defparam \Clk50M~input .bus_hold = "false";
defparam \Clk50M~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G2
cycloneive_clkctrl \Clk50M~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\Clk50M~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\Clk50M~inputclkctrl_outclk ));
// synopsys translate_off
defparam \Clk50M~inputclkctrl .clock_type = "global clock";
defparam \Clk50M~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: LCCOMB_X6_Y23_N28
cycloneive_lcell_comb \cnt[0]~3 (
// Equation(s):
// \cnt[0]~3_combout  = !cnt[0]

	.dataa(gnd),
	.datab(gnd),
	.datac(cnt[0]),
	.datad(gnd),
	.cin(gnd),
	.combout(\cnt[0]~3_combout ),
	.cout());
// synopsys translate_off
defparam \cnt[0]~3 .lut_mask = 16'h0F0F;
defparam \cnt[0]~3 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: IOIBUF_X0_Y11_N15
cycloneive_io_ibuf \Rst_n~input (
	.i(Rst_n),
	.ibar(gnd),
	.o(\Rst_n~input_o ));
// synopsys translate_off
defparam \Rst_n~input .bus_hold = "false";
defparam \Rst_n~input .simulate_z_as = "z";
// synopsys translate_on

// Location: CLKCTRL_G4
cycloneive_clkctrl \Rst_n~inputclkctrl (
	.ena(vcc),
	.inclk({vcc,vcc,vcc,\Rst_n~input_o }),
	.clkselect(2'b00),
	.devclrn(devclrn),
	.devpor(devpor),
	.outclk(\Rst_n~inputclkctrl_outclk ));
// synopsys translate_off
defparam \Rst_n~inputclkctrl .clock_type = "global clock";
defparam \Rst_n~inputclkctrl .ena_register_mode = "none";
// synopsys translate_on

// Location: FF_X6_Y23_N29
dffeas \cnt[0] (
	.clk(\Clk50M~inputclkctrl_outclk ),
	.d(\cnt[0]~3_combout ),
	.asdata(vcc),
	.clrn(\Rst_n~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt[0]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt[0] .is_wysiwyg = "true";
defparam \cnt[0] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X6_Y23_N22
cycloneive_lcell_comb \cnt[1]~2 (
// Equation(s):
// \cnt[1]~2_combout  = cnt[1] $ (cnt[0])

	.dataa(gnd),
	.datab(gnd),
	.datac(cnt[1]),
	.datad(cnt[0]),
	.cin(gnd),
	.combout(\cnt[1]~2_combout ),
	.cout());
// synopsys translate_off
defparam \cnt[1]~2 .lut_mask = 16'h0FF0;
defparam \cnt[1]~2 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X6_Y23_N23
dffeas \cnt[1] (
	.clk(\Clk50M~inputclkctrl_outclk ),
	.d(\cnt[1]~2_combout ),
	.asdata(vcc),
	.clrn(\Rst_n~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt[1]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt[1] .is_wysiwyg = "true";
defparam \cnt[1] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X6_Y23_N4
cycloneive_lcell_comb \cnt[2]~1 (
// Equation(s):
// \cnt[2]~1_combout  = cnt[2] $ (((cnt[1] & cnt[0])))

	.dataa(cnt[1]),
	.datab(gnd),
	.datac(cnt[2]),
	.datad(cnt[0]),
	.cin(gnd),
	.combout(\cnt[2]~1_combout ),
	.cout());
// synopsys translate_off
defparam \cnt[2]~1 .lut_mask = 16'h5AF0;
defparam \cnt[2]~1 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X6_Y23_N5
dffeas \cnt[2] (
	.clk(\Clk50M~inputclkctrl_outclk ),
	.d(\cnt[2]~1_combout ),
	.asdata(vcc),
	.clrn(\Rst_n~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt[2]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt[2] .is_wysiwyg = "true";
defparam \cnt[2] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X6_Y23_N26
cycloneive_lcell_comb \cnt[3]~0 (
// Equation(s):
// \cnt[3]~0_combout  = cnt[3] $ (((cnt[1] & (cnt[2] & cnt[0]))))

	.dataa(cnt[1]),
	.datab(cnt[2]),
	.datac(cnt[3]),
	.datad(cnt[0]),
	.cin(gnd),
	.combout(\cnt[3]~0_combout ),
	.cout());
// synopsys translate_off
defparam \cnt[3]~0 .lut_mask = 16'h78F0;
defparam \cnt[3]~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X6_Y23_N27
dffeas \cnt[3] (
	.clk(\Clk50M~inputclkctrl_outclk ),
	.d(\cnt[3]~0_combout ),
	.asdata(vcc),
	.clrn(\Rst_n~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(cnt[3]),
	.prn(vcc));
// synopsys translate_off
defparam \cnt[3] .is_wysiwyg = "true";
defparam \cnt[3] .power_up = "low";
// synopsys translate_on

// Location: LCCOMB_X6_Y23_N6
cycloneive_lcell_comb \Equal0~0 (
// Equation(s):
// \Equal0~0_combout  = (cnt[3] & (cnt[2] & (cnt[1] & cnt[0])))

	.dataa(cnt[3]),
	.datab(cnt[2]),
	.datac(cnt[1]),
	.datad(cnt[0]),
	.cin(gnd),
	.combout(\Equal0~0_combout ),
	.cout());
// synopsys translate_off
defparam \Equal0~0 .lut_mask = 16'h8000;
defparam \Equal0~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: LCCOMB_X6_Y23_N12
cycloneive_lcell_comb \led~0 (
// Equation(s):
// \led~0_combout  = \led~reg0_q  $ (\Equal0~0_combout )

	.dataa(gnd),
	.datab(gnd),
	.datac(\led~reg0_q ),
	.datad(\Equal0~0_combout ),
	.cin(gnd),
	.combout(\led~0_combout ),
	.cout());
// synopsys translate_off
defparam \led~0 .lut_mask = 16'h0FF0;
defparam \led~0 .sum_lutc_input = "datac";
// synopsys translate_on

// Location: FF_X6_Y23_N13
dffeas \led~reg0 (
	.clk(\Clk50M~inputclkctrl_outclk ),
	.d(\led~0_combout ),
	.asdata(vcc),
	.clrn(\Rst_n~inputclkctrl_outclk ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.devclrn(devclrn),
	.devpor(devpor),
	.q(\led~reg0_q ),
	.prn(vcc));
// synopsys translate_off
defparam \led~reg0 .is_wysiwyg = "true";
defparam \led~reg0 .power_up = "low";
// synopsys translate_on

assign led = \led~output_o ;

endmodule

module hard_block (

	devpor,
	devclrn,
	devoe);

// Design Ports Information
// ~ALTERA_ASDO_DATA1~	=>  Location: PIN_C1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_FLASH_nCE_nCSO~	=>  Location: PIN_D2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DCLK~	=>  Location: PIN_H1,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_DATA0~	=>  Location: PIN_H2,	 I/O Standard: 2.5 V,	 Current Strength: Default
// ~ALTERA_nCEO~	=>  Location: PIN_F16,	 I/O Standard: 2.5 V,	 Current Strength: 8mA

input 	devpor;
input 	devclrn;
input 	devoe;

wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

wire \~ALTERA_ASDO_DATA1~~padout ;
wire \~ALTERA_FLASH_nCE_nCSO~~padout ;
wire \~ALTERA_DATA0~~padout ;
wire \~ALTERA_ASDO_DATA1~~ibuf_o ;
wire \~ALTERA_FLASH_nCE_nCSO~~ibuf_o ;
wire \~ALTERA_DATA0~~ibuf_o ;


endmodule
