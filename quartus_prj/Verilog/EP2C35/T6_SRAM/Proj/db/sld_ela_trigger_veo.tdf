--sld_ela_trigger ASYNC_ENABLED=0 DATA_BITS=27 LEVEL_NAMES="sld_reserved_SRAM_auto_signaltap_0_1," SYNC_ENABLED=1 TRIGGER_LEVEL=1 acq_clk clrn data_in enable_trigger reset_all setup_bit_in setup_bit_out setup_ena tck trigger_level_ena trigger_level_match_out
--VERSION_BEGIN 5.0 cbx_mgl 2005:05:19:13:51:58:SJ cbx_sld_ela_trigger 2004:07:29:16:40:22:SJ  VERSION_END


--  Copyright (C) 1988-2005 Altera Corporation
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, Altera MegaCore Function License 
--  Agreement, or other applicable license agreement, including, 
--  without limitation, that your use is for the sole purpose of 
--  programming logic devices manufactured by Altera and sold by 
--  Altera or its authorized distributors.  Please refer to the 
--  applicable agreement for further details.


FUNCTION sld_reserved_SRAM_auto_signaltap_0_1 (acq_clk, clrn, data_in[26..0], reset_all, setup_bit_in, setup_ena, tck, trigger_level_ena)
WITH ( 	ASYNC_ENABLED,	DATA_BITS,	SYNC_ENABLED,	TRIGGER_LEVEL) 
RETURNS ( setup_bit_out, trigger);

--synthesis_resources = sld_reserved_SRAM_auto_signaltap_0_1 1 
SUBDESIGN sld_ela_trigger_veo
( 
	acq_clk	:	input;
	clrn	:	input;
	data_in[26..0]	:	input;
	enable_trigger[0..0]	:	input;
	reset_all	:	input;
	setup_bit_in	:	input;
	setup_bit_out	:	output;
	setup_ena	:	input;
	tck	:	input;
	trigger_level_ena[0..0]	:	input;
	trigger_level_match_out[0..0]	:	output;
) 
VARIABLE 
	mgl_prim1 : sld_reserved_SRAM_auto_signaltap_0_1
		WITH (
			ASYNC_ENABLED = 0,
			DATA_BITS = 27,
			SYNC_ENABLED = 1,
			TRIGGER_LEVEL = 1
		);
	w8w	: WIRE;

BEGIN 
	mgl_prim1.acq_clk = acq_clk;
	mgl_prim1.clrn = ((clrn & enable_trigger[0..0]) & (! mgl_prim1.trigger));
	mgl_prim1.data_in[] = data_in[];
	mgl_prim1.reset_all = reset_all;
	mgl_prim1.setup_bit_in = w8w;
	mgl_prim1.setup_ena = setup_ena;
	mgl_prim1.tck = tck;
	mgl_prim1.trigger_level_ena = trigger_level_ena[0..0];
	setup_bit_out = mgl_prim1.setup_bit_out;
	trigger_level_match_out[] = ( mgl_prim1.trigger);
	w8w = setup_bit_in;
END;
--VALID FILE
