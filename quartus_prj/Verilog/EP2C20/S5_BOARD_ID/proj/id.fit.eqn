-- Copyright (C) 1991-2005 Altera Corporation
-- Your use of Altera Corporation's design tools, logic functions 
-- and other software and tools, and its AMPP partner logic 
-- functions, and any output files any of the foregoing 
-- (including device programming or simulation files), and any 
-- associated documentation or information are expressly subject 
-- to the terms and conditions of the Altera Program License 
-- Subscription Agreement, Altera MegaCore Function License 
-- Agreement, or other applicable license agreement, including, 
-- without limitation, that your use is for the sole purpose of 
-- programming logic devices manufactured by Altera and sold by 
-- Altera or its authorized distributors.  Please refer to the 
-- applicable agreement for further details.
--A1L63Q is led_7s[0]~reg0 at LCFF_X48_Y26_N17
A1L63Q = DFFEAS(A1L1, GLOBAL(A1L8),  ,  ,  ,  ,  ,  ,  );


--A1L34Q is led_7s[5]~reg0 at LCFF_X48_Y26_N23
A1L34Q = DFFEAS(A1L2, GLOBAL(A1L8),  ,  ,  ,  ,  ,  ,  );


--A1L93Q is led_7s[2]~reg0 at LCFF_X48_Y26_N19
A1L93Q = DFFEAS(A1L3, GLOBAL(A1L8),  ,  ,  ,  ,  ,  ,  );


--A1L25Q is led_7s[11]~reg0 at LCFF_X48_Y26_N3
A1L25Q = DFFEAS(A1L4, GLOBAL(A1L8),  ,  ,  ,  ,  ,  ,  );


--A1L94Q is led_7s[10]~reg0 at LCFF_X48_Y26_N21
A1L94Q = DFFEAS(A1L05, GLOBAL(A1L8),  ,  ,  ,  ,  ,  ,  );


--state[1] is state[1] at LCFF_X48_Y26_N11
state[1] = DFFEAS(A1L95, GLOBAL(A1L8),  ,  , state[0],  ,  ,  ,  );


--state[0] is state[0] at LCFF_X48_Y26_N13
state[0] = DFFEAS(A1L75, GLOBAL(A1L8),  ,  ,  ,  ,  ,  ,  );


--A1L1 is Decoder~42 at LCCOMB_X48_Y26_N16
A1L1 = !state[1] & !state[0];


--clk is clk at LCFF_X49_Y14_N29
clk = DFFEAS(A1L6, GLOBAL(A1L45),  ,  ,  ,  ,  ,  ,  );


--A1L2 is Decoder~43 at LCCOMB_X48_Y26_N22
A1L2 = !state[1] & state[0];


--A1L3 is Decoder~44 at LCCOMB_X48_Y26_N18
A1L3 = state[1] & !state[0];


--A1L4 is Decoder~45 at LCCOMB_X48_Y26_N2
A1L4 = !state[0] # !state[1];


--i[7] is i[7] at LCFF_X49_Y14_N27
i[7] = DFFEAS(A1L23, GLOBAL(A1L45),  ,  ,  ,  ,  ,  ,  );


--i[6] is i[6] at LCFF_X49_Y14_N25
i[6] = DFFEAS(A1L92, GLOBAL(A1L45),  ,  ,  ,  ,  ,  ,  );


--i[5] is i[5] at LCFF_X49_Y14_N23
i[5] = DFFEAS(A1L62, GLOBAL(A1L45),  ,  ,  ,  ,  ,  ,  );


--i[4] is i[4] at LCFF_X49_Y14_N21
i[4] = DFFEAS(A1L32, GLOBAL(A1L45),  ,  ,  ,  ,  ,  ,  );


--i[3] is i[3] at LCFF_X49_Y14_N19
i[3] = DFFEAS(A1L02, GLOBAL(A1L45),  ,  ,  ,  ,  ,  ,  );


--i[2] is i[2] at LCFF_X49_Y14_N17
i[2] = DFFEAS(A1L71, GLOBAL(A1L45),  ,  ,  ,  ,  ,  ,  );


--i[1] is i[1] at LCFF_X49_Y14_N15
i[1] = DFFEAS(A1L41, GLOBAL(A1L45),  ,  ,  ,  ,  ,  ,  );


--i[0] is i[0] at LCFF_X49_Y14_N13
i[0] = DFFEAS(A1L11, GLOBAL(A1L45),  ,  ,  ,  ,  ,  ,  );


--A1L11 is i[0]~65 at LCCOMB_X49_Y14_N12
A1L11 = i[0] $ VCC;

--A1L21 is i[0]~66 at LCCOMB_X49_Y14_N12
A1L21 = CARRY(i[0]);


--A1L41 is i[1]~67 at LCCOMB_X49_Y14_N14
A1L41 = i[1] & !A1L21 # !i[1] & (A1L21 # GND);

--A1L51 is i[1]~68 at LCCOMB_X49_Y14_N14
A1L51 = CARRY(!A1L21 # !i[1]);


--A1L71 is i[2]~69 at LCCOMB_X49_Y14_N16
A1L71 = i[2] & (A1L51 $ GND) # !i[2] & !A1L51 & VCC;

--A1L81 is i[2]~70 at LCCOMB_X49_Y14_N16
A1L81 = CARRY(i[2] & !A1L51);


--A1L02 is i[3]~71 at LCCOMB_X49_Y14_N18
A1L02 = i[3] & !A1L81 # !i[3] & (A1L81 # GND);

--A1L12 is i[3]~72 at LCCOMB_X49_Y14_N18
A1L12 = CARRY(!A1L81 # !i[3]);


--A1L32 is i[4]~73 at LCCOMB_X49_Y14_N20
A1L32 = i[4] & (A1L12 $ GND) # !i[4] & !A1L12 & VCC;

--A1L42 is i[4]~74 at LCCOMB_X49_Y14_N20
A1L42 = CARRY(i[4] & !A1L12);


--A1L62 is i[5]~75 at LCCOMB_X49_Y14_N22
A1L62 = i[5] & !A1L42 # !i[5] & (A1L42 # GND);

--A1L72 is i[5]~76 at LCCOMB_X49_Y14_N22
A1L72 = CARRY(!A1L42 # !i[5]);


--A1L92 is i[6]~77 at LCCOMB_X49_Y14_N24
A1L92 = i[6] & (A1L72 $ GND) # !i[6] & !A1L72 & VCC;

--A1L03 is i[6]~78 at LCCOMB_X49_Y14_N24
A1L03 = CARRY(i[6] & !A1L72);


--A1L23 is i[7]~79 at LCCOMB_X49_Y14_N26
A1L23 = i[7] & !A1L03 # !i[7] & (A1L03 # GND);

--A1L33 is i[7]~80 at LCCOMB_X49_Y14_N26
A1L33 = CARRY(!A1L03 # !i[7]);


--A1L6 is clk~8 at LCCOMB_X49_Y14_N28
A1L6 = A1L33 $ !clk;


--A1L95 is state[1]~31 at LCCOMB_X48_Y26_N10
A1L95 = !state[1];


--A1L75 is state[0]~32 at LCCOMB_X48_Y26_N12
A1L75 = !state[0];


--mclk is mclk at PIN_W12
--operation mode is input

mclk = INPUT();


--led_7s[0] is led_7s[0] at PIN_D22
--operation mode is output

led_7s[0] = OUTPUT(A1L63Q);


--led_7s[1] is led_7s[1] at PIN_D21
--operation mode is output

led_7s[1] = OUTPUT(A1L34Q);


--led_7s[2] is led_7s[2] at PIN_B17
--operation mode is output

led_7s[2] = OUTPUT(A1L93Q);


--led_7s[3] is led_7s[3] at PIN_B16
--operation mode is output

led_7s[3] = OUTPUT(!A1L25Q);


--led_7s[4] is led_7s[4] at PIN_C21
--operation mode is output

led_7s[4] = OUTPUT(GND);


--led_7s[5] is led_7s[5] at PIN_C22
--operation mode is output

led_7s[5] = OUTPUT(A1L34Q);


--led_7s[6] is led_7s[6] at PIN_A19
--operation mode is output

led_7s[6] = OUTPUT(A1L25Q);


--led_7s[7] is led_7s[7] at PIN_B18
--operation mode is output

led_7s[7] = OUTPUT(A1L25Q);


--led_7s[8] is led_7s[8] at PIN_B19
--operation mode is output

led_7s[8] = OUTPUT(A1L25Q);


--led_7s[9] is led_7s[9] at PIN_D20
--operation mode is output

led_7s[9] = OUTPUT(A1L94Q);


--led_7s[10] is led_7s[10] at PIN_A18
--operation mode is output

led_7s[10] = OUTPUT(A1L94Q);


--led_7s[11] is led_7s[11] at PIN_B20
--operation mode is output

led_7s[11] = OUTPUT(A1L25Q);





--A1L8 is clk~clkctrl at CLKCTRL_G4
A1L8 = cycloneii_clkctrl(.INCLK[0] = clk) WITH (clock_type = "Global Clock");


--A1L45 is mclk~clkctrl at CLKCTRL_G14
A1L45 = cycloneii_clkctrl(.INCLK[0] = mclk) WITH (clock_type = "Global Clock");


--A1L05 is led_7s[10]~reg0feeder at LCCOMB_X48_Y26_N20
A1L05 = state[1];


